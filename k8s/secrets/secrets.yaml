# IMPORTANT: This file contains example secrets structure.
# In production, create secrets using kubectl or external secret management tools.
# Never commit actual secret values to version control.

apiVersion: v1
kind: Secret
metadata:
  name: database-secret
  namespace: ai-schedule-manager
  labels:
    app: ai-schedule-manager
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  # echo -n 'actual_username' | base64
  postgres-user: cG9zdGdyZXM=  # postgres
  # echo -n 'actual_password' | base64
  postgres-password: Y2hhbmdlbWVfaW5fcHJvZHVjdGlvbg==  # changeme_in_production
  # Full database URL - base64 encoded
  database-url: cG9zdGdyZXNxbDovL3Bvc3RncmVzOmNoYW5nZW1lX2luX3Byb2R1Y3Rpb25AcG9zdGdyZXMtc2VydmljZTo1NDMyL2FpX3NjaGVkdWxlX21hbmFnZXI=
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: ai-schedule-manager
  labels:
    app: ai-schedule-manager
type: Opaque
data:
  # Base64 encoded values
  redis-password: cmVkaXNfcGFzc3dvcmRfY2hhbmdlbWU=  # redis_password_changeme
  redis-url: cmVkaXM6Ly9kZWZhdWx0OnJlZGlzX3Bhc3N3b3JkX2NoYW5nZW1lQHJlZGlzLXNlcnZpY2U6NjM3OS8w
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: ai-schedule-manager
  labels:
    app: ai-schedule-manager
type: Opaque
data:
  # JWT secret key - generate a strong random key
  jwt-secret-key: eW91cl9qd3Rfc2VjcmV0X2tleV9jaGFuZ2VfaW5fcHJvZHVjdGlvbl92ZXJ5X2xvbmdfYW5kX3NlY3VyZQ==

  # API keys (optional)
  sendgrid-api-key: ""  # Base64 encoded SendGrid API key
  slack-webhook-url: ""  # Base64 encoded Slack webhook URL
  google-calendar-credentials: ""  # Base64 encoded Google Calendar service account JSON

  # Monitoring and error tracking
  sentry-dsn: ""  # Base64 encoded Sentry DSN
  frontend-sentry-dsn: ""  # Base64 encoded frontend Sentry DSN

  # OAuth secrets (if using OAuth)
  google-oauth-client-secret: ""
  microsoft-oauth-client-secret: ""

  # Encryption keys
  data-encryption-key: ""  # Base64 encoded encryption key for sensitive data
---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-secrets
  namespace: ai-schedule-manager
  labels:
    app: monitoring
type: Opaque
data:
  # Grafana admin password
  grafana-admin-password: YWRtaW5fcGFzc3dvcmQ=  # admin_password
  # Grafana secret key for session encryption
  grafana-secret-key: Z3JhZmFuYV9zZWNyZXRfa2V5X2NoYW5nZW1l  # grafana_secret_key_changeme
  # Database credentials for Grafana
  grafana-db-name: Z3JhZmFuYQ==  # grafana
  grafana-db-user: Z3JhZmFuYQ==  # grafana
  grafana-db-password: Z3JhZmFuYV9wYXNzd29yZA==  # grafana_password
---
apiVersion: v1
kind: Secret
metadata:
  name: ssl-certificates
  namespace: ai-schedule-manager
  labels:
    app: ai-schedule-manager
type: kubernetes.io/tls
data:
  # TLS certificate and key (will be managed by cert-manager in production)
  tls.crt: ""  # Base64 encoded certificate
  tls.key: ""  # Base64 encoded private key
---
# External secrets example using External Secrets Operator
# Uncomment and configure if using external secret management
#
# apiVersion: external-secrets.io/v1beta1
# kind: SecretStore
# metadata:
#   name: aws-secrets-manager
#   namespace: ai-schedule-manager
# spec:
#   provider:
#     aws:
#       service: SecretsManager
#       region: us-west-2
#       auth:
#         secretRef:
#           accessKeyID:
#             name: aws-secret
#             key: access-key-id
#           secretAccessKey:
#             name: aws-secret
#             key: secret-access-key
# ---
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: app-secrets-external
#   namespace: ai-schedule-manager
# spec:
#   refreshInterval: 15m
#   secretStoreRef:
#     name: aws-secrets-manager
#     kind: SecretStore
#   target:
#     name: app-secrets-from-aws
#     creationPolicy: Owner
#   data:
#   - secretKey: jwt-secret-key
#     remoteRef:
#       key: ai-schedule-manager/jwt-secret
#   - secretKey: database-password
#     remoteRef:
#       key: ai-schedule-manager/db-password
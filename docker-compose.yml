version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER:-scheduleuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
      POSTGRES_DB: ${DB_NAME:-scheduledb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - schedule_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-scheduleuser}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    networks:
      - schedule_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql://${DB_USER:-scheduleuser}:${DB_PASSWORD:-changeme}@postgres:5432/${DB_NAME:-scheduledb}
      REDIS_URL: redis://:${REDIS_PASSWORD:-changeme}@redis:6379/0
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - schedule_network
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./frontend/.env
    environment:
      REACT_APP_API_URL: http://backend:8000
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - schedule_network

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql://${DB_USER:-scheduleuser}:${DB_PASSWORD:-changeme}@postgres:5432/${DB_NAME:-scheduledb}
      REDIS_URL: redis://:${REDIS_PASSWORD:-changeme}@redis:6379/0
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD:-changeme}@redis:6379/1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - schedule_network
    command: celery -A src.celery_app worker --loglevel=${LOG_LEVEL:-info}

  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD:-changeme}@redis:6379/1
      FLOWER_BASIC_AUTH: ${FLOWER_USER:-admin}:${FLOWER_PASSWORD:-changeme}
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    depends_on:
      - redis
      - celery
    networks:
      - schedule_network
    command: celery -A src.celery_app flower --port=5555

  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - schedule_network

volumes:
  postgres_data:

networks:
  schedule_network:
    name: schedule_network